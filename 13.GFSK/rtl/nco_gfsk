module nco_gfsk (
    input clk,
    input rst_n,
    input [15:0] frequency_control,
    output reg [7:0] phase_addr,
    output dac_clk
);
    
    parameter CLK_FREQ = 100_000_000;
    parameter CARRIER_FREQ = 1_000_000;
    parameter DEVIATION = 50_000;
    parameter SR = 256;
    
    localparam PHASE_ACC_WIDTH = 32;
    localparam FREQ_CTRL_WIDTH = 32;
    
    reg [PHASE_ACC_WIDTH-1:0] phase_accumulator;
    wire [FREQ_CTRL_WIDTH-1:0] freq_word;
    
    // 频率控制字计算
    assign freq_word = (CARRIER_FREQ + 
                      ((frequency_control - 32768) * DEVIATION / 32768)) * 
                      (1 << PHASE_ACC_WIDTH) / CLK_FREQ;
    
    // 相位累加器
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            phase_accumulator <= 0;
        end else begin
            phase_accumulator <= phase_accumulator + freq_word;
        end
    end
    
    // 相位到地址转换(取高8位作为ROM地址)
    always @(posedge clk) begin
        phase_addr <= phase_accumulator[PHASE_ACC_WIDTH-1:PHASE_ACC_WIDTH-8];
    end
    
    // DAC时钟生成(分频)
    reg [7:0] clk_div;
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            clk_div <= 0;
        end else begin
            clk_div <= clk_div + 1;
        end
    end
    
    assign dac_clk = clk_div[7]; // 100MHz/256 ≈ 390kHz
    
endmodule